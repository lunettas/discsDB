<!doctype html>
<html lang="en" data-bs-theme="dark">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>discs DB demo</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
  </head>
  <body >
    <h1 class="text-center">Test disc input into the database here!</h1>
  
<form>
    <div class="p-3">
      <form method="POST" action="/submit" >
      {{!-- hidden  --}}
      <input type="hidden" name="disc_info" value="{{mold}},{{brand}},{{speed}},{{glide}},{{turn}},{{fade}}">
{{!-- select table --}}
        <div class="mb-3">
          <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example" name="table" id="table-select" class="bg-dark"> 
            <option selected>Choose a table to input the discs into</option>
            <option value="silasdiscs">Silas</option>
            <option value="jcdiscs">JC</option>
            <option value="testdiscs">Test</option>
          </select>
        </div>
{{!-- select category --}}
        <div>
          <label for="category" class="form-label">Disc Category || Disc Collection </label>
          <select id="option-select" name="category" class="text-body bg-body"></select>
        </div>
{{!-- look up the mold with API--}}
<form action="/autocomplete" method="get">
  <input type="text" name="q" placeholder="Enter a query...">
  <button id="api-autocomplete-btn" type="button">Lookup Mold</button>
{{!-- color and stamp --}}
          <div class="input-group"> 
            <span class="input-group-text">Color, Stamp, and Weight</span>
            <input id="color" type="text" aria-label="Disc Color" class="form-control" name="color" placeholder="Color">
            <input id="stamp" type="text" aria-label="Stamp" class="form-control" name="stamp" placeholder="Stamp">
            <input id="input-weight" type="number" value="175" min="1" max="200" class="form-control"  aria-describedby="weightHelp" name="weight">          
          </div>
          <div><br></div>
{{!-- sleepyscale --}}
          <div class="mb-3">
            <select type="number" class="form-select form-select-sm form-control" id="inputSleepyScale" aria-describedby="sleepyScaleHelp" name="sleepyscale">
              <option selected>Sleepy Scale</option>
              <option value="1">1 - Beat to Hades dog chew toy</option>
              <option value="2">2 - or under Beat to Hades dog chew toy</option>
              <option value="3">3 - or under Beat to Hades dog chew toy</option>
              <option value="4">4 - Beat up turnover disc with some evident war story wear</option>
              <option value="5">5 - Kinda beat, significant wear, has lost a good bit of it's stability</option>
              <option value="6">6 - Typical used disc with the usual dings, scratches but still worthy</option>
              <option value="7">7 - Used with some minor dings or scuffs but still in</option>
              <option value="8">8 - Lightly used with very minimal wear </option>
              <option value="9">9 - Field tested or used for one or two rounds, no ink. </option>
              <option value="10">10 - Never thrown, no ink, brand new condition</option>
            </select>
          </div>
        <button type="submit" id="submit-btn" class="btn btn-success">Submit to database</button>
      </form></div>

      <!-- TODO: move to JS file -->
      <script>//implementing table specific collections
        // Get references to the select elements
        const tableSelect = document.getElementById('table-select');
        const optionSelect = document.getElementById('option-select');
      
        // Add an event listener to the table select element
        tableSelect.addEventListener('change', function() {
          // Clear the options of the option select element
          optionSelect.innerHTML = '';
      
          // Get the selected value of the table select element
          const selectedTable = tableSelect.value;
      
          // Populate the options of the option select element based on the selected table
          if (selectedTable === 'silasdiscs') {
            const options = [
                //'Main Bag', 'Side Bag', 'Collection', 'Backup', 'Emily', 'Sale / Trade'
              { value: 'Main Bag', label: 'Main Bag' },
              { value: 'Side Bag', label:'Side Bag' },
              { value: 'Collection', label: 'Collection' },
              { value: 'Backup', label: 'Backup' },
              { value: 'Emily', label: 'Emily' },
              { value: 'Sale / Trade', label: 'Sale / Trade' }
            ];
      
            options.forEach(option => {
              const optionElement = document.createElement('option');
              optionElement.value = option.value;
              optionElement.textContent = option.label;
              optionSelect.appendChild(optionElement);
            });
          } else if (selectedTable === 'jcdiscs') {
            const options = [
              { value: 'Main Bag', label: 'Main Bag' },
              { value: 'Side Bag', label:'Side Bag' },
              { value: 'Collection', label: 'Collection' },
              { value: 'Backup', label: 'Backup' },
              { value: 'Emily', label: 'Emily' },
              { value: 'Sale / Trade', label: 'Sale / Trade' },
              { value: 'Loan', label: 'Loan' },
              { value: 'Dalton', label: 'Dalton' },
              { value:'Max', label: 'Max' },
              { value: 'Silas', label: 'Silas' }
            ];
      
            options.forEach(option => {
              const optionElement = document.createElement('option');
              optionElement.value = option.value;
              optionElement.textContent = option.label;
              optionSelect.appendChild(optionElement);
            });
          } else if (selectedTable === 'testdiscs') {
            const options = [
              { value: 'Main Bag', label: 'Main Bag' },
              { value: 'Side Bag', label:'Side Bag' },
              { value: 'Collection', label: 'Collection' },
              { value: 'Backup', label: 'Backup' },
              { value: 'Emily', label: 'Emily' },
              { value: 'Sale / Trade', label: 'Sale / Trade' },
              { value: 'Loan', label: 'Loan' },
              { value: 'Dalton', label: 'Dalton' },
              { value:'Max', label: 'Max' },
              { value: 'Silas', label: 'Silas' },
              { value: 'Simon', label: 'Simon' }
            ];
      
            options.forEach(option => {
              const optionElement = document.createElement('option');
              optionElement.value = option.value;
              optionElement.textContent = option.label;
              optionSelect.appendChild(optionElement);
            });
          }
          });
      </script>
  <!-- TODO: set up autocomplete -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="autocomplete.js"></script>

  <script>
const apiCallBtn = document.getElementById('api-autocomplete-btn');
  const form = $('form');
  const input = $('input[name=q]');
  
  function apiCall() {
    const query = input.val(); // get the value of the input field
    const apiUrl = 'https://discit-api.fly.dev/disc/' + query; // connect to API endpoint
    $.get(apiUrl, function(response) {
      // handle the response from the server
      $('input[name=disc_info]').val(`${response.mold},${response.brand},${response.speed},${response.glide},${response.turn},${response.fade}`);
      console.log(response);
    });
  }

  apiCallBtn.addEventListener('click', apiCall);

  form.submit(function(event) {
    event.preventDefault(); // prevent the default form submit action
    apiCall();
  });

  input.keypress(function(event) {
    if (event.which === 13) { // check if enter key was pressed
      event.preventDefault(); // prevent default submit action
      apiCall();
    }
  });
</script>

  </body>
</html>

