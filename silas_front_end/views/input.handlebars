<!doctype html>
<html lang="en" data-bs-theme="dark">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>discs DB demo</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
  </head>
  <body >
    <h1 class="text-center">Input discs into the database here!</h1>
    <div class="p-3">
      <form method="POST" action="/submit" >
      {{!-- select table --}}
        <div class="mb-3">
          <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example" name="table" id="table-select" class="bg-dark"> 
            <option selected>Choose a table to input the discs into</option>
            <option value="silasdiscs">Silas</option>
            <option value="jcdiscs">JC</option>
            <option value="testdiscs">Test</option>
          </select>
        </div>
        {{!-- select category --}}
        <div>
          <label for="category" class="form-label">Disc Category || Disc Collection </label>
          <select id="option-select" name="category" class="text-body bg-body"></select>
        </div>
{{!-- input mold/plastic/brand --}}
        <div class="input-group">
          <span class="input-group-text">Disc Mold</span>
          <input type="text" class="form-control" id="inputMold" aria-label="mold" name="mold" placeholder="Mold" >
          <input type="text" class="form-control" id="inputPlastic" aria-label="plastic" name="plastic" placeholder="Plastic">
          <input type="text" class="form-control" id="inputMold" aria-label="brand" name="brand" placeholder="Brand">
          <div id="moldHelp" class="form-text"></div>
        </div>
        <a class="text-success" href="https://www.wrightlife.com/plastic-types-and-descriptions/" target="_blank">Not sure what the plastic type is?</a>
{{!-- input plastic --}}
        {{!-- <div class="mb-3">
          <label for="inputPlastic" class="form-label">Disc Plastic</label>
          <input type="text" class="form-control" id="inputPlastic" aria-describedby="plasticHelp" name="plastic">
          <div id="plasticHelp" class="form-text "></div>
        </div> --}}
{{!-- input brand-- do we want to validate this? --}}
        {{!-- <div class="mb-3">
          <label for="inputBrand" class="form-label">Disc Brand</label>
          <input type="text" class="form-control" id="inputBrand" aria-describedby="BrandHelp" name="brand">
          <div id="BrandHelp" class="form-text"><!--helper txt here--></div>
        </div> --}}
{{!-- weight --}}
        {{!-- <div class="mb-3">
            <label for="inputWeight" class="form-label">Disc Weight</label>
            
            <div id="weightHelp" class="form-text"><!-- add helper text here --></div>
          </div> --}}
          {{!-- flight numbers --}}
          <div class="input-group">
            <span class="input-group-text">Flight Numbers</span>
            <input type="number" aria-label="Speed" step=".5" min="1" class="form-control" name="speed" placeholder="Speed">
            <input type="number" aria-label="Glide" step=".5" min="1" class="form-control" name="glide" placeholder="Glide">
            <input type="number" step=".5" aria-label="Turn" class="form-control" name="turn" placeholder="Turn">
            <input type="number" step=".5" aria-label="Fade" class="form-control" name="fade" placeholder="Fade">
          </div>   <div><br></div>
          {{!-- color and stamp --}}
          <div class="input-group">
            <span class="input-group-text">Color, Stamp, and Weight</span>
            <input type="text" aria-label="Disc Color" class="form-control" name="color" placeholder="Color">
            <input type="text" aria-label="Stamp" class="form-control" name="stamp" placeholder="Stamp">
            <input type="number" value="175" min="1" max="200" class="form-control" id="inputWeight" aria-describedby="weightHelp" name="weight">          
          </div>
          <div><br></div>
          <div class="mb-3">
            <!-- <label for="inputSleepyScale" class="form-label">Disc SleepyScale</label> -->
            <select type="number" class="form-select form-select-sm form-control" id="inputSleepyScale" aria-describedby="sleepyScaleHelp" name="sleepyscale">
              <option selected>Sleepy Scale</option>
              <option value="1">1 - Beat to Hades dog chew toy</option>
              <option value="2">2 - or under Beat to Hades dog chew toy</option>
              <option value="3">3 - or under Beat to Hades dog chew toy</option>
              <option value="4">4 - Beat up turnover disc with some evident war story wear</option>
              <option value="5">5 - Kinda beat, significant wear, has lost a good bit of it's stability</option>
              <option value="6">6 - Typical used disc with the usual dings, scratches but still worthy</option>
              <option value="7">7 - Used with some minor dings or scuffs but still in</option>
              <option value="8">8 - Lightly used with very minimal wear </option>
              <option value="9">9 - Field tested or used for one or two rounds, no ink. </option>
              <option value="10">10 - Never thrown, no ink, brand new condition</option>
            </select>
            <!-- <div id="sleepyScaleHelp" class="form-text">10 - Never thrown, no ink, brand new condition 9 - Field tested or used for one or two rounds, no ink.                               8 - Lightly used with very minimal wear 7 - Used with some minor dings or scuffs but still in good shape  6 - Typical used disc with the usual dings, scratches but still worthy 5 - Kinda beat, significant wear, has lost a good bit of it's stability 4 - Beat up turnover disc with some evident war story wear 3 or under - Beat to Hades dog chew toy</div> -->
          </div>
        <button type="submit" id="submit-btn" class="btn btn-success">Submit</button>
      </form></div>

      <!-- TODO: move to JS file -->
      <script>//implementing table specific collections
        // Get references to the select elements
        const tableSelect = document.getElementById('table-select');
        const optionSelect = document.getElementById('option-select');
      
        // Add an event listener to the table select element
        tableSelect.addEventListener('change', function() {
          // Clear the options of the option select element
          optionSelect.innerHTML = '';
      
          // Get the selected value of the table select element
          const selectedTable = tableSelect.value;
      
          // Populate the options of the option select element based on the selected table
          if (selectedTable === 'silasdiscs') {
            const options = [
                //'Main Bag', 'Side Bag', 'Collection', 'Backup', 'Emily', 'Sale / Trade'
              { value: 'Main Bag', label: 'Main Bag' },
              { value: 'Side Bag', label:'Side Bag' },
              { value: 'Collection', label: 'Collection' },
              { value: 'Backup', label: 'Backup' },
              { value: 'Emily', label: 'Emily' },
              { value: 'Sale / Trade', label: 'Sale / Trade' }
            ];
      
            options.forEach(option => {
              const optionElement = document.createElement('option');
              optionElement.value = option.value;
              optionElement.textContent = option.label;
              optionSelect.appendChild(optionElement);
            });
          } else if (selectedTable === 'jcdiscs') {
            const options = [
              { value: 'Main Bag', label: 'Main Bag' },
              { value: 'Side Bag', label:'Side Bag' },
              { value: 'Collection', label: 'Collection' },
              { value: 'Backup', label: 'Backup' },
              { value: 'Emily', label: 'Emily' },
              { value: 'Sale / Trade', label: 'Sale / Trade' },
              { value: 'Loan', label: 'Loan' },
              { value: 'Dalton', label: 'Dalton' },
              { value:'Max', label: 'Max' },
              { value: 'Silas', label: 'Silas' }
            ];
      
            options.forEach(option => {
              const optionElement = document.createElement('option');
              optionElement.value = option.value;
              optionElement.textContent = option.label;
              optionSelect.appendChild(optionElement);
            });
          } else if (selectedTable === 'testdiscs') {
            const options = [
              { value: 'Main Bag', label: 'Main Bag' },
              { value: 'Side Bag', label:'Side Bag' },
              { value: 'Collection', label: 'Collection' },
              { value: 'Backup', label: 'Backup' },
              { value: 'Emily', label: 'Emily' },
              { value: 'Sale / Trade', label: 'Sale / Trade' },
              { value: 'Loan', label: 'Loan' },
              { value: 'Dalton', label: 'Dalton' },
              { value:'Max', label: 'Max' },
              { value: 'Silas', label: 'Silas' },
              { value: 'Simon', label: 'Simon' }
            ];
      
            options.forEach(option => {
              const optionElement = document.createElement('option');
              optionElement.value = option.value;
              optionElement.textContent = option.label;
              optionSelect.appendChild(optionElement);
            });
          }
          });
      </script>
  <!-- TODO: set up autocomplete -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/gh/xcash/bootstrap-autocomplete@v2.3.7/dist/latest/bootstrap-autocomplete.min.js"></script>
  <script src="./autocomplete.js"></script>
  </body>
</html>

